<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bookmarketsys.databasejob.mapper.BookMapper" >
  <resultMap id="BaseResultMap" type="com.bookmarketsys.databasejob.pojo.Book" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="author" property="author" jdbcType="VARCHAR" />
    <result column="press" property="press" jdbcType="VARCHAR" />
    <result column="translation_author" property="translationAuthor" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="menu_id" property="menuId" jdbcType="INTEGER" />
    <result column="simple_path" property="simplePath" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="DOUBLE" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_opr" property="createOpr" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="update_opr" property="updateOpr" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, author, press, translation_author, type, menu_id, simple_path, price, create_time, 
    create_opr, update_time, update_opr
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.bookmarketsys.databasejob.pojo.BookExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from book
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from book
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from book
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.bookmarketsys.databasejob.pojo.BookExample" >
    delete from book
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bookmarketsys.databasejob.pojo.Book" >
    insert into book (id, name, author, 
      press, translation_author, type, 
      menu_id, simple_path, price, 
      create_time, create_opr, update_time, 
      update_opr)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, 
      #{press,jdbcType=VARCHAR}, #{translationAuthor,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{menuId,jdbcType=INTEGER}, #{simplePath,jdbcType=VARCHAR}, #{price,jdbcType=DOUBLE}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createOpr,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{updateOpr,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.bookmarketsys.databasejob.pojo.Book" >
    insert into book
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="author != null" >
        author,
      </if>
      <if test="press != null" >
        press,
      </if>
      <if test="translationAuthor != null" >
        translation_author,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="menuId != null" >
        menu_id,
      </if>
      <if test="simplePath != null" >
        simple_path,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createOpr != null" >
        create_opr,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="updateOpr != null" >
        update_opr,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="author != null" >
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="press != null" >
        #{press,jdbcType=VARCHAR},
      </if>
      <if test="translationAuthor != null" >
        #{translationAuthor,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="menuId != null" >
        #{menuId,jdbcType=INTEGER},
      </if>
      <if test="simplePath != null" >
        #{simplePath,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createOpr != null" >
        #{createOpr,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateOpr != null" >
        #{updateOpr,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bookmarketsys.databasejob.pojo.BookExample" resultType="java.lang.Integer" >
    select count(*) from book
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update book
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.author != null" >
        author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.press != null" >
        press = #{record.press,jdbcType=VARCHAR},
      </if>
      <if test="record.translationAuthor != null" >
        translation_author = #{record.translationAuthor,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.menuId != null" >
        menu_id = #{record.menuId,jdbcType=INTEGER},
      </if>
      <if test="record.simplePath != null" >
        simple_path = #{record.simplePath,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createOpr != null" >
        create_opr = #{record.createOpr,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateOpr != null" >
        update_opr = #{record.updateOpr,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update book
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      author = #{record.author,jdbcType=VARCHAR},
      press = #{record.press,jdbcType=VARCHAR},
      translation_author = #{record.translationAuthor,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      menu_id = #{record.menuId,jdbcType=INTEGER},
      simple_path = #{record.simplePath,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DOUBLE},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_opr = #{record.createOpr,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_opr = #{record.updateOpr,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bookmarketsys.databasejob.pojo.Book" >
    update book
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="author != null" >
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="press != null" >
        press = #{press,jdbcType=VARCHAR},
      </if>
      <if test="translationAuthor != null" >
        translation_author = #{translationAuthor,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="menuId != null" >
        menu_id = #{menuId,jdbcType=INTEGER},
      </if>
      <if test="simplePath != null" >
        simple_path = #{simplePath,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createOpr != null" >
        create_opr = #{createOpr,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateOpr != null" >
        update_opr = #{updateOpr,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bookmarketsys.databasejob.pojo.Book" >
    update book
    set name = #{name,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      press = #{press,jdbcType=VARCHAR},
      translation_author = #{translationAuthor,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      menu_id = #{menuId,jdbcType=INTEGER},
      simple_path = #{simplePath,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_opr = #{createOpr,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_opr = #{updateOpr,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>